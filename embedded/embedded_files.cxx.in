#include "embedded_files.hxx"



namespace @NESTED_NAMESPACE@embedded_files {


@EMBEDDED_FILE_INCLUDES@

  static constexpr std::array<const char *, @NUMFILES@> embedded_file_names{
@EMBEDDED_FILE_NAMES@
  };

  static constexpr std::array<size_t, @NUMFILES@> embedded_file_lens{
@EMBEDDED_FILE_LENS@
  };

  static constexpr std::array<const uint8_t *, @NUMFILES@> embedded_files{
@EMBEDDED_FILES@
  };

  const std::vector<std::string> &fileNames() {
    static const auto result  = std::vector<std::string>{embedded_file_names.begin(), embedded_file_names.end()};
    return result;
  }

  const std::map<std::string, std::pair<size_t, const uint8_t *>> &files()
  {
    static const auto fs = [](){
      std::map<std::string, std::pair<size_t, const uint8_t *>> vals;
      if (vals.empty()){
        for (size_t i = 0; i < embedded_file_names.size(); ++i) {
          vals.insert(std::make_pair(std::string(embedded_file_names.at(i)),
                std::make_pair(embedded_file_lens.at(i),
                  embedded_files.at(i))));
        }
      }
      return vals;
    }();
    return fs;
  }

}


