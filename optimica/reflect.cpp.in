// This program is only used to generate reflection information at build time
#include "util/config.hpp"
#include <sstream>
#include <iostream>
#include <nlohmann/json.hpp>

using json = nlohmann::json;

int main() {
  setenv("JMODELICA_HOME", "${optimica_path}", 1);
  const std::string msl_dir = "${MSL_ROOT_DIR}/${MSL_VER}";

  json options;
  options["model"] = "Buildings.ThermalZones." + spawn::mbl_energyplus_version_string() + ".Validation.ThermalZone.OneZoneOneYear";

  options["outputDir"] = "${CMAKE_CURRENT_BINARY_DIR}/AirHeating";
  options["fmuType"] = "CS";
  options["mslDir"] = msl_dir;
  options["modelicaPaths"] = std::vector{"${PROJECT_SOURCE_DIR}/submodules/modelica-buildings/Buildings"};

  std::stringstream cmd;
  cmd << "${Java_JAVA_EXECUTABLE}";
  cmd << " -agentlib:native-image-agent=config-output-dir=META-INF/native-image";
  cmd << " -classpath ${classpath}";
  cmd << " Optimica";
  cmd << " " << "'" << options << "'";

  return system(cmd.str().c_str());
}

